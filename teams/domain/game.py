class GameRules:
    def __init__(self, name, can_tie, oid):
        self.oid = oid
        self.name = name
        self.can_tie = can_tie


class Game:
    def __init__(self, year, day, home_team, away_team, home_score, away_score, complete, processed, rules, oid):
        self.year = year
        self.day = day
        self.home_team = home_team
        self.away_team = away_team
        self.home_score = home_score
        self.away_score = away_score
        self.complete = complete
        self.oid = oid
        self.rules = rules
        self.processed = processed

    score_matrix = {
        "-20": [[0, 1, 396], [1, 396, 521], [2, 521, 721], [3, 721, 901], [4, 901, 981], [5, 981, 1001],
                [6, 1001, 1001], [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-19": [[0, 1, 366], [1, 366, 481], [2, 481, 681], [3, 681, 881], [4, 881, 961], [5, 961, 1001],
                [6, 1001, 1001], [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-18": [[0, 1, 336], [1, 336, 441], [2, 441, 661], [3, 661, 876], [4, 876, 956], [5, 956, 1001],
                [6, 1001, 1001], [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-17": [[0, 1, 306], [1, 306, 411], [2, 411, 631], [3, 631, 856], [4, 856, 956], [5, 956, 1001],
                [6, 1001, 1001], [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-16": [[0, 1, 276], [1, 276, 381], [2, 381, 601], [3, 601, 836], [4, 836, 951], [5, 951, 1001],
                [6, 1001, 1001], [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-15": [[0, 1, 246], [1, 246, 351], [2, 351, 576], [3, 576, 821], [4, 821, 946], [5, 946, 996], [6, 996, 1001],
                [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-14": [[0, 1, 216], [1, 216, 321], [2, 321, 551], [3, 551, 801], [4, 801, 936], [5, 936, 991], [6, 991, 1001],
                [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-13": [[0, 1, 196], [1, 196, 301], [2, 301, 531], [3, 531, 791], [4, 791, 931], [5, 931, 986], [6, 986, 1001],
                [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-12": [[0, 1, 176], [1, 176, 281], [2, 281, 511], [3, 511, 776], [4, 776, 921], [5, 921, 981], [6, 981, 1001],
                [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-11": [[0, 1, 156], [1, 156, 261], [2, 261, 496], [3, 496, 771], [4, 771, 916], [5, 916, 976], [6, 976, 1001],
                [7, 1001, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-10": [[0, 1, 136], [1, 136, 241], [2, 241, 476], [3, 476, 756], [4, 756, 901], [5, 901, 966], [6, 966, 996],
                [7, 996, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-9": [[0, 1, 116], [1, 116, 221], [2, 221, 456], [3, 456, 741], [4, 741, 891], [5, 891, 961], [6, 961, 996],
               [7, 996, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-8": [[0, 1, 106], [1, 106, 211], [2, 211, 446], [3, 446, 731], [4, 731, 881], [5, 881, 951], [6, 951, 991],
               [7, 991, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-7": [[0, 1, 96], [1, 96, 201], [2, 201, 426], [3, 426, 711], [4, 711, 881], [5, 881, 951], [6, 951, 991],
               [7, 991, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-6": [[0, 1, 86], [1, 86, 191], [2, 191, 416], [3, 416, 701], [4, 701, 871], [5, 871, 941], [6, 941, 986],
               [7, 986, 1001], [8, 1001, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-5": [[0, 1, 79], [1, 79, 184], [2, 184, 409], [3, 409, 694], [4, 694, 869], [5, 869, 939], [6, 939, 984],
               [7, 984, 999], [8, 999, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-4": [[0, 1, 72], [1, 72, 177], [2, 177, 402], [3, 402, 687], [4, 687, 862], [5, 862, 932], [6, 932, 977],
               [7, 977, 997], [8, 997, 1001], [9, 1001, 1001], [10, 1001, 10000]],
        "-3": [[0, 1, 69], [1, 69, 174], [2, 174, 399], [3, 399, 684], [4, 684, 859], [5, 859, 929], [6, 929, 974],
               [7, 974, 994], [8, 994, 1001], [9, 1000, 1001], [10, 1001, 10000]],
        "-2": [[0, 1, 61], [1, 61, 161], [2, 161, 386], [3, 386, 671], [4, 671, 846], [5, 846, 918], [6, 918, 967],
               [7, 967, 992], [8, 992, 1001], [9, 1000, 1001], [10, 1001, 10000]],
        "-1": [[0, 1, 56], [1, 56, 156], [2, 156, 381], [3, 381, 666], [4, 666, 841], [5, 841, 913], [6, 913, 963],
               [7, 963, 988], [8, 988, 1001], [9, 998, 1000], [10, 1000, 10000]],
        "0": [[0, 1, 51], [1, 51, 151], [2, 151, 376], [3, 376, 661], [4, 661, 836], [5, 836, 911], [6, 911, 961],
              [7, 961, 986], [8, 986, 1001], [9, 998, 1000], [10, 1000, 10000]],
        "1": [[0, 1, 46], [1, 46, 141], [2, 141, 356], [3, 356, 646], [4, 646, 826], [5, 826, 906], [6, 906, 961],
              [7, 961, 986], [8, 986, 1001], [9, 998, 1000], [10, 1000, 10000]],
        "2": [[0, 1, 41], [1, 41, 131], [2, 131, 341], [3, 341, 636], [4, 636, 821], [5, 821, 906], [6, 906, 961],
              [7, 961, 986], [8, 986, 1001], [9, 998, 1000], [10, 1000, 10000]],
        "3": [[0, 1, 36], [1, 36, 121], [2, 121, 326], [3, 326, 621], [4, 621, 811], [5, 811, 901], [6, 901, 961],
              [7, 961, 986], [8, 986, 1001], [9, 998, 1000], [10, 1000, 10000]],
        "4": [[0, 1, 31], [1, 31, 111], [2, 111, 311], [3, 311, 606], [4, 606, 796], [5, 796, 891], [6, 891, 956],
              [7, 956, 986], [8, 986, 1001], [9, 998, 1000], [10, 1000, 10000]],
        "5": [[0, 1, 26], [1, 26, 101], [2, 101, 296], [3, 296, 591], [4, 591, 781], [5, 781, 876], [6, 876, 946],
              [7, 946, 981], [8, 981, 1001], [9, 996, 999], [10, 999, 10000]],
        "6": [[0, 1, 21], [1, 21, 91], [2, 91, 276], [3, 276, 576], [4, 576, 771], [5, 771, 871], [6, 871, 946],
              [7, 946, 981], [8, 981, 1001], [9, 996, 999], [10, 999, 10000]],
        "7": [[0, 1, 16], [1, 16, 81], [2, 81, 256], [3, 256, 556], [4, 556, 756], [5, 756, 856], [6, 856, 936],
              [7, 936, 976], [8, 976, 1001], [9, 996, 999], [10, 999, 10000]],
        "8": [[0, 1, 11], [1, 11, 71], [2, 71, 236], [3, 236, 536], [4, 536, 741], [5, 741, 846], [6, 846, 926],
              [7, 926, 971], [8, 971, 1001], [9, 991, 997], [10, 997, 10000]],
        "9": [[0, 1, 6], [1, 6, 56], [2, 56, 211], [3, 211, 516], [4, 516, 726], [5, 726, 831], [6, 831, 916],
              [7, 916, 966], [8, 966, 1001], [9, 991, 997], [10, 997, 10000]],
        "10": [[0, 1, 1], [1, 1, 46], [2, 46, 191], [3, 191, 496], [4, 496, 711], [5, 711, 821], [6, 821, 906],
               [7, 906, 961], [8, 961, 1001], [9, 991, 997], [10, 997, 10000]],
        "11": [[0, 1, 1], [1, 1, 41], [2, 41, 176], [3, 176, 486], [4, 486, 701], [5, 701, 811], [6, 811, 901],
               [7, 901, 961], [8, 961, 1001], [9, 991, 997], [10, 997, 10000]],
        "12": [[0, 1, 1], [1, 1, 36], [2, 36, 161], [3, 161, 471], [4, 471, 691], [5, 691, 806], [6, 806, 896],
               [7, 896, 961], [8, 961, 1001], [9, 991, 997], [10, 997, 10000]],
        "13": [[0, 1, 1], [1, 1, 31], [2, 31, 146], [3, 146, 456], [4, 456, 681], [5, 681, 801], [6, 801, 896],
               [7, 896, 961], [8, 961, 1001], [9, 991, 997], [10, 997, 10000]],
        "14": [[0, 1, 1], [1, 1, 26], [2, 26, 126], [3, 126, 436], [4, 436, 661], [5, 661, 786], [6, 786, 891],
               [7, 891, 961], [8, 961, 1001], [9, 991, 997], [10, 997, 10000]],
        "15": [[0, 1, 1], [1, 1, 21], [2, 21, 106], [3, 106, 426], [4, 426, 651], [5, 651, 776], [6, 776, 881],
               [7, 881, 951], [8, 951, 1001], [9, 986, 996], [10, 996, 10000]],
        "16": [[0, 1, 1], [1, 1, 16], [2, 16, 81], [3, 81, 406], [4, 406, 636], [5, 636, 766], [6, 766, 871],
               [7, 871, 946], [8, 946, 1001], [9, 986, 996], [10, 996, 10000]],
        "17": [[0, 1, 1], [1, 1, 11], [2, 11, 56], [3, 56, 371], [4, 371, 621], [5, 621, 761], [6, 761, 871],
               [7, 871, 946], [8, 946, 1001], [9, 986, 996], [10, 996, 10000]],
        "18": [[0, 1, 1], [1, 1, 6], [2, 6, 31], [3, 31, 346], [4, 346, 606], [5, 606, 756], [6, 756, 871],
               [7, 871, 946], [8, 946, 1001], [9, 986, 996], [10, 996, 10000]],
        "19": [[0, 1, 1], [1, 1, 1], [2, 1, 6], [3, 6, 321], [4, 321, 581], [5, 581, 741], [6, 741, 866], [7, 866, 941],
               [8, 941, 1001], [9, 981, 996], [10, 996, 10000]],
        "20": [[0, 1, 1], [1, 1, 1], [2, 1, 1], [3, 1, 316], [4, 316, 576], [5, 576, 736], [6, 736, 861], [7, 861, 936],
               [8, 936, 1001], [9, 976, 991], [10, 991, 10000]],
    }

    def get_score(self, skill_diff, random):
        if skill_diff < -20 or skill_diff > 20:
            raise ValueError(str(skill_diff) + " is not a valid skill difference.")

        matrix = self.score_matrix[str(skill_diff)]

        min_value = 1
        max_value = 1000

        value = random.randint(min_value, max_value)

        for a in matrix:
            possible_score = a[0]
            if a[1] <= value <= a[2]:
                return possible_score

        raise ValueError("Matrix didn't have a value.")

    def play(self, random):
        if not self.complete:
            skill_diff = self.home_team.skill - self.away_team.skill

            self.home_score = self.get_score(skill_diff, random)
            self.away_score = self.get_score(skill_diff, random)
            while self.home_score == self.away_score and not self.rules.can_tie:
                a = random.randint(-6, 6)
                if a < 0:
                    self.away_score += 1
                elif a > 0:
                    self.home_score += 1

            self.complete = True
